-- SQL dump generated using DBML (dbml.dbdiagram.io)
-- Database: PostgreSQL
-- Generated at: 2025-07-11T05:07:55.943Z

CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" text UNIQUE NOT NULL,
  "password_hash" text NOT NULL,
  "created_at" timestamp
);

CREATE TABLE "servers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "owner_id" int NOT NULL
);

CREATE TABLE "memberships" (
  "user_id" int,
  "server_id" int,
  "join_at" timestamp DEFAULT (now()),
  "primary" key(user_id,server_id)
);

CREATE TABLE "friends" (
  "requester_id" int,
  "receiver_id" int,
  "status" text
);

CREATE TABLE "voice_channels" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "server_id" int,
  "name" text NOT NULL
);

CREATE TABLE "text_channels" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "server_id" int NOT NULL,
  "name" text NOT NULL,
  "created_at" timestamp,
  "topic" text
);

CREATE TABLE "messages" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "channel_id" int NOT NULL,
  "sender_id" int NOT NULL,
  "content" text NOT NULL,
  "sent_at" timestamp NOT NULL DEFAULT (now()),
  "edited_at" timestamp,
  "type" text
);

CREATE TABLE "voice_sessions" (
  "user_id" int,
  "channel_id" int,
  "connected_at" timestamp,
  "primary" key(user_id)
);

CREATE TABLE "roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "server_id" int,
  "name" text NOT NULL
);

CREATE TABLE "user_roles" (
  "user_id" int,
  "role_id" int,
  "primary" key(user_id,role_id)
);

CREATE TABLE "channel_permissions" (
  "channel_id" int NOT NULL,
  "channel_type" text NOT NULL,
  "role_id" int,
  "can_join" boolean,
  "can_read" boolean,
  "can_write" boolean,
  "can_manage" boolean,
  "primary" key(channel_id,channel_type,role_id)
);

CREATE TABLE "dm_conversations" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_a_id" int,
  "user_b_id" int,
  "created_at" timestamp
);

CREATE TABLE "dm_messages" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "conversation_id" int,
  "sender_id" int,
  "content" text NOT NULL,
  "sent_at" timestamp DEFAULT (now()),
  "edited_at" timestamp,
  "type" text
);

CREATE TABLE "server_files" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "server_id" int,
  "uploader_id" int,
  "filename" text NOT NULL,
  "filepath" text NOT NULL,
  "mime_type" text,
  "size_bytes" bigint NOT NULL,
  "uploaded_at" timestamp DEFAULT (now()),
  "is_deleted" boolean DEFAULT false
);

CREATE TABLE "file_logs" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "file_id" int,
  "user_id" int,
  "action" text NOT NULL,
  "action_at" timestamp DEFAULT (now()),
  "note" text
);

CREATE UNIQUE INDEX ON "dm_conversations" ("user_a_id", "user_b_id");

COMMENT ON COLUMN "friends"."status" IS 'pending, accepted, blocked';

COMMENT ON COLUMN "text_channels"."topic" IS 'Optional channel description or topic';

COMMENT ON COLUMN "messages"."type" IS 'Optional: text, image, file, system';

COMMENT ON COLUMN "channel_permissions"."channel_type" IS 'text or voice';

COMMENT ON COLUMN "channel_permissions"."can_join" IS 'only for Voice';

COMMENT ON COLUMN "channel_permissions"."can_read" IS 'only for Text';

COMMENT ON COLUMN "channel_permissions"."can_write" IS 'only for Text';

COMMENT ON COLUMN "dm_messages"."type" IS 'e.g. ''text'', ''image'', ''file''';

COMMENT ON COLUMN "server_files"."size_bytes" IS 'Enforce 250 MB max in code';

COMMENT ON COLUMN "file_logs"."action" IS 'e.g. ''upload'', ''delete'', ''modify''';

COMMENT ON COLUMN "file_logs"."note" IS 'Optional: reason, metadata, etc.';

ALTER TABLE "servers" ADD FOREIGN KEY ("owner_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "memberships" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "memberships" ADD FOREIGN KEY ("server_id") REFERENCES "servers" ("id") ON DELETE CASCADE;

ALTER TABLE "friends" ADD FOREIGN KEY ("requester_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "friends" ADD FOREIGN KEY ("receiver_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "voice_channels" ADD FOREIGN KEY ("server_id") REFERENCES "servers" ("id") ON DELETE CASCADE;

ALTER TABLE "text_channels" ADD FOREIGN KEY ("server_id") REFERENCES "servers" ("id") ON DELETE CASCADE;

ALTER TABLE "messages" ADD FOREIGN KEY ("channel_id") REFERENCES "text_channels" ("id") ON DELETE CASCADE;

ALTER TABLE "messages" ADD FOREIGN KEY ("sender_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "voice_sessions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "voice_sessions" ADD FOREIGN KEY ("channel_id") REFERENCES "voice_channels" ("id") ON DELETE CASCADE;

ALTER TABLE "roles" ADD FOREIGN KEY ("server_id") REFERENCES "servers" ("id") ON DELETE CASCADE;

ALTER TABLE "user_roles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "user_roles" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id") ON DELETE CASCADE;

ALTER TABLE "channel_permissions" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id") ON DELETE CASCADE;

ALTER TABLE "dm_conversations" ADD FOREIGN KEY ("user_a_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "dm_conversations" ADD FOREIGN KEY ("user_b_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "dm_messages" ADD FOREIGN KEY ("sender_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "dm_messages" ADD FOREIGN KEY ("conversation_id") REFERENCES "dm_conversations" ("id") ON DELETE CASCADE;

ALTER TABLE "server_files" ADD FOREIGN KEY ("server_id") REFERENCES "servers" ("id") ON DELETE CASCADE;

ALTER TABLE "server_files" ADD FOREIGN KEY ("uploader_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "file_logs" ADD FOREIGN KEY ("file_id") REFERENCES "server_files" ("id") ON DELETE CASCADE;

ALTER TABLE "file_logs" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;
